      An Introduction to SoftwareDefined Radio (SDR)
      
      Dr. Danny Webster
      
      >> One, one, one.  So, one, one  oh, super.  Hello, everyone.  So, very happy to introduce Danny Webster.  Talking to us about SDR.  So, hello, take it away.  Thanks.
      [ Applause ]
      DR. WEBSTER: All right.  Thank you.  You can hear me okay?  Right.  Today I'm talking about a very introduction to softwaredefined radio.  I'm going to start off by talking about why on Earth do we need a softwaredefined radio.  What is a softwaredefined radio?  And I'll talk a little bit about the products that our company make.  And then I'll give free example applications of our softwaredefined radio including digital television transmission and reception, GSM base station and a 4G system being deployed at the University of Gilford and also in the Scottish Highlands somewhere.
      So, back in the 1940s, life was frightfully simple.  You had three schemes.  Morse code, the BBC transmitting a.m. modulation for entertainment, and a little bit of frequency shift keying going on.  And then kind of in the 1950s, it started getting complicated.  Someone invented FM.  And obviously the transistor radio started taking off.  And then about 1991 an explosion of radio standards took place on the back of the 2G GSM system that was released.  Now, broadly you can define the different radio standards into four different categories.  There's a various data radio standards which are probably very familiar with such as WiFi, Bluetooth, so on.  There's the mobile standards, 2G, 3G and 4G.  And then there's the entertainment
      Based systems such as digital television, digital satellite and their second generations.  DAV and DAV2 and obviously good oldfashioned FM and AM.  And then you have the navigationbased radio systems such as GPS and Galileo and the Japanese and Chinese versions.
      So, if you like, this is an engineer's view of  of the radio environment.  So, as a designer, you're normally asked not only to produce one of these, but you have to produce some combination of these from modern day products.  So, for example, your 4G phone will support 3G, 2G, probably GPS and so on.  So, the cost of actually developing a specific piece of silicon for this suddenly becomes horrendously expensive.  The software becomes a very much more affordable route to generate these.
      Now, let's flip it on its head now and look at it from the consumer's point of view.  I think most of you probably will recognize this situation.  You have your AM/FM radio in the kitchen.  You have your WiFi router somewhere in the house.  You may be having NAV in your car.  You have a combination of satellite cable or free view.  You also have your 4G tablets lying around and so on.  So, you have a box, basically, for each radio standard.
      My wife is a minimalist and she would like to just have one box and not a whole room full of electronics.  And she would like it to be wireless.  I never quite understood that bit.  But she's very keen for things to be wireless.  So, the idea is we have this single books softwaredefined radio which replaces everything else and it's largely futureproof.  So, someone invents a new softwaredefined radio standard  a new radio standard, an app can be downloaded and so on.  Now, let's start looking at a little bit before detail of the softwaredefined radio.  I would also like to emphasize that a solve the radio isn't the card that you buy from Crowd Supply or from Amazon.  But it's actually a whole system.  So, you have the RF parts, which would typically include an antenna and some kind of RF filters which prevents you being jammed by signals and also stops you from interfering with other systems.
      You also have the radio module itself, which would include some sort of transceiver unit and a field programmable logic system which provides the connection between the radio and the computer.  And these will typically be using USB2 or 3 or PCIE.  And then you have your computer itself.  And the repertory of software which you can download off the Internet or is supplied by the manufacturer of the equipment.  Bear in mind that today's entrylevel computers are now multicore vector mass geared up machines.  So, it's been a tremendous leap of progress in the hardware platforms that we have for our computers these days.  And, of course, they connect to good oldfashioned ethernet, WiFi and ACSL.  I could talk about our transceiver, it's a complicated animal.  And this is true for most of the chips in softwaredefined radio.
      They're highly programmable beasts.  We like the term field programmable, which takes on a whole new meaning here, of course.  We're obviously looking for low power consumption.  And for today's applications, you don't just have a single channel radio now, but you have MIMO, you have one or two transmit and two receive channels working on different antennas.
      So, the idea of the company I work for is to produce the chips.  We then produce the modules and we also are starting to produce entire systems for customers now.  And what we're relying on is thirdparties to produce the software which we then run on those products to generate the different applications.  So, for example, we have both USB and PCIE products.  And I'm not really into bashing the competitors.  They each have their own value.
      But the main limitation on USB is the amount of traffic you can actually get down the USB cable.  So, typically for USB3, you're looking about 30 mega samples per second more MIMO transit and receive.  That sets it for the hardware.  PCIE is more relaxed, typically something like 60 mega samples per second for a full MIMO transmitter system.  Some have waveform playback which I personally find very useful for debugging radios as you're building them.  Our designers have come up with all sorts of fancy cases.  There's not only an evolution of what goes inside the box, but there's also an evolution in the box that they actually come into.  So, a little bit about our radios.
      Basically, you can buy them from Crowd Supply.  Other companies will sell them through Amazon.  Our Crowd Supply does give a comparison to some of the competitors to help you choose if your product is the right product for you or if one of our competitor's products is more suitable for your application.  We have an open source policy in our company.  So, the actual hardware is open source.  So, you can actually read up about the chip sets that have gone into them and you can then get the data sheets and then how to program all the different parts and develop a radio at any level of detail which you wish to.
      We have our own line suite software which has two roles.  It primarily was intended to test the chip as we developed it.  But it also produces a C library which you can then link into with your software.  And then you can link into other languages, of course, such as Python.  Okay.  Now for some typical examples.  We have a digital television example here.  And it's the kind of project we quite like at Lime.  It's a mix of things.  It has a mix of radios in it, a Raspberry Pi 0, and the software was developed by Everest, I think from Denmark, and he has both a transmitter and a receiver for digital television.
      So, within a couple minutes you can actually be broadcasting your own digital television stream.  Subject to the local regulations, of course, wherever you are.  Another system that we have, which is actually deployed here, which I believe is working generally well which is a GSM bay station.  On each of the data porter cabins here, they have one of these bay stations.  And it consists of a Raspberry Pi, again, one of our SDR modules and a power supply.  It's providing GSM coverage over this site.  It's based on open source software developed in Germany by our friends at OsmoCon.  So, it's actually  as I said, an open source, free to use system.
      At the high end of the system, there's also  we had systems with a high processer.  So, I7 processer.  And this is actually being used to generate 4G signals and allows you to do video telephones around the office or in the small local area.  And it's also being used in some macro bay station developments.  So, for example, we have a trial system at the University of Surrey in Gilford on top of the center.  And another is being rolled out which I think is 20 watts and it's going to be deployed in the Orkney Islands in Scotland.  This is using commerciallyavailable software such as Cortez.  And I think the hardware is on the line net project if you want to followup on that.  So, if you like, it's a combination of second generation professional quality softwaredefined radios.  And developments in the microprocessors themselves and also developments in the open source software and also commercial software.  That's enabling these radio systems now to be used for entertainment, for surveillance, for mobile communications.  And we're gradually making progress to that single box radio.
      Okay.  That concludes my talk.
      [ Applause ]
      >> Thanks.  Okay.  Do we have any questions from the audience?  And just if you could try to keep them short in general and if you have specific  very specific questions, maybe talk with our speaker afterwards.
      AUDIENCE: It's not a question, it's just one of your units is strapped to that pole to your immediate left.
      AUDIENCE: I was wondering, so, could you give us an estimate about how long it would take to set up a mobile phone repeater?
      DR. WEBSTER: Mobile phone repeater.  We have done a number of projects with a repeater company.  So, that could be done fairly quickly.  Best way is to contact us. We’ll give you a software state for one of the radios and you can develop whatever else you need to make it compliant with the regulation.
      >> Yes?
      AUDIENCE: I thought OsmoCon was supporting LTE.  Why are you using proprietary software for the LTE projects?
      DR. WEBSTER: I don't actually know the answer to that one.
      >> If you could raise your hand so I could see it, that would be incredibly helpful if you have any more questions.  Okay.  I think that is it.  Thank you very much.  And 
      [ Applause ]
      As a reminder, EMF Camp is entirely volunteer run.  Everything you see is put together by people remarkably similar to you in many ways.  And part of making EMF awesome is the volunteers.  If you are inclined to help, head over to the volunteer tent and ask and many of us would be happy to help you get started in contributing to making EMF the amazing place that it is. 

