Boiling Nemo - Make your own Internet of Things by PJ Evans.
>> Hello. One, two, two? Good? Happy? Can you hear me at the back? Right, we're good. 
>> I'm happy to introduce the next talk here at EMF. I think we're about the same tile, it's PJ Evans talking about boiling Nemo and the Internet of Things. Thank you! [Applause]. 
>> I'm just waiting for my screen. Mr Nice AV People? Are we all enjoying EMF so far? [Cheering]. Cool. It will be nice when it's finished! [Laughter]. Seriously, kudos to Jonty and the team for doing an exceptional job in exceptional circumstances. As part of the content team, I've been watching what is going on in the background. If you were at the opening talk, Jonty didn't tell the half of it. He was very, very polite about some people who he should not have been polite to. We're trying to work out how the screen works. It's fun..talk amongst yourselves. Oh, be I could do a plug:  one of the things me and my family are doing here is running the Film Festival. Yay! We've got - there we go. I've started now, so I'm going to finish. Yep, slightly distracting slide. Pixar were not consulted. So, we're running the Film Festival tonight. Tonight, we've got a world premiere of Tent Man, a 30-minute feature made here at EMF in 2014 and 2016. I know it's the world premiere because I haven't seen it yet. I'm told it's very good, and then Coraline, the scariest animation feature of made - it's absolutely brilliant. The director directed Nightmare Before Christmas. Of course, on Saturday night, we've got our big presentation, which is Hackers, with Jake Davis aka Topiary, and the director answering your questions afterwards. It's going to be amazing. I had better get on with the talk. Boiling Nemo. My name is PJ Evans. For EMF camp purposes, I write for this magazine. It's another little slight plug for you. In this one, I've built something to annoy my teenage son which is a Klaxon. He's always playing a game, headphones on. You can build it with a Raspberry Pi, and I can send signals to him from a mobile phone. If he gets really annoying and doesn't come down for his dinner when I wants him to, it lets off the most ear-piercing screech you've ever heard. That gets through to him! I've been building Internet of Things things for quite a while now, and I want to tell you a bit about my experiences and hopefully encourage you to go out and start building your own things. The story starts with this device here, called a Canary? Anyone ever heard of one? Not surprising, really. My boss at the time brought one of these. It actually looks quite nice. You can put it on your mantelpiece, or on a table somewhere in your house. It has got a camera and a motion detector in it. When someone moves around, it takes a video. If someone breaks into your house, it takes a video of them. I said that's brilliant. I asked where the SD card slot. You plug it in, you take the video off the device, so you've got a video file to give the police. I said how do you get to it? He said you connect to the cloud you had. My alarm bells started going off. Oh, right, they're trying to do it so it's easy to use, you log into your account on there, and you download the video? He said, no. No? Only if you pay a subscription. So you've dropped about £200 on this device, and then, if you actually want to download the videos, you've got to pay another £25 a year. Since he got the device, that's changed now, and you can be paying up to £25 a month to get access to your own videos. Now, things like this, it's why, here's a cloud, and here's me. I'm suspicious of the cloud. I don't like it very much because it's not the cloud, it's other people's computers. So I thought it would be  more fun to build my own things. I didn't get anywhere until I had a problem with my fish tank - a 190-litre tank filled with tropical fish. I absolutely love it. It sits there in our dining room. I come down for breakfast one morning. My son's there, and my wife's there. And I walk in, good morning, everyone. My wife gives me that look. Now, if anyone has been in any kind of long-term relationship, they know this look, especially if you've got kids. The look says, "Do not say a word!". Which was fine because I didn't have the slightest idea what she was talking about. So I didn't say a word. She kept looking at me saying ... "What? I haven't got a clue." This went on. Breakfast finished. My son went off to school. My wife said to me, "What happened?" I said, "I don't know!" And she looked over to the fish tank. Which was a bit suspicious because of the absence of fish! There weren't any. Where did they go? We opened the top, and there they all were, about 60 fish beautifully poached. We had boiled Nemo. What had happened was that the thermistor which controls the heater had broken and, for some reason, the default state was to leave the heater on. The temperature in the tank had risen and risen until the fish couldn't take it any more. I was like, can't have this again. Joking aside, we lost fish that were over five years old. At the time, it was quite upsetting. I went to work, can I buy something that measures the temperature and lets me know if anything is awry? The answer is no. No-one has got anything on the market yet. So I decided to build my own. I thought I would use one of these. I love these. Raspberry Pis. I even write for a magazine about them. The best thing about a Pi0 is the GPIO. It is a computer you can buy for as little as £9, £12 if you want Wi-Fi on it as well, and you can connect all kinds of devices to that circuit board. There's tons of documentation out there and tutorials so even the absolute ginger can get their head around what is going on. I took one of those, and I thought, right, I need something that's going to measure temperature, something accurate to within, let's say, a thousand th of a degree Celsius. Something like that is going to be really, really expensive, isn't it? I went on Amazon. No, £1.50, and free delivery. I bought two. I've got the other one here. I bought two! There you go. Cheap as chips, incredibly accurate and it's water proof. It just has three wires at the end. Power, ground, and data. Again, tons of tutorials and information about how to get this thing wired up. So I started a plan. Now, I should explain, I was in a bit of a hurry putting this presentation together, and I'm no good with clip art. I went to Keynote, and they have a search box for the clip art. I typed in what I wanted and took whatever it gave me. Here's my tank! Here's my fish in the tank. And here is my thermistor I put in there. They didn't have a raspberry so connected to strawberry! It's taking a reading every 15 seconds of the temperature. This is what I got for server to a server in a cloud. That's my network diagram so far. Here's what it actually looks like wired up with a Raspberry Pi. You only need one resistor as an extra component to get it up and testing. This is what the end result was. This is a website I built where you can see throughout the day what the temperatures are, and the two red lines are the high level and the low level that it's safe to be in. As you can see, once I got it up and running, it was working perfectly well. So I thought, project over, the only thing is, how's it going to tell me? I got it so send me an email - that was straightforward enough - if it went out of range. If I'm on my phone, I'm going to know about it. There's me on the phone. So I went with Pushover. Now, that's a good app because there's no subscription model. You pay the app once and it gives you an email to a notification gateway, so I can get things like that, when the actual thing crashed, which it did frequently at first. It told me I don't have any report on the temperature, go and have a look. Project done. All happy. Until I went on holiday to Scotland. Now, if you've read the blush for this talk, I did say it was a Scottish tour and an emergency, this is. This is one of my favourite places in the world, the Cairngorms Hotel up in the highlands of Scotland in Aviemore. My wife and I and son were having a quiet drink, enjoying the atmosphere. I got the call of nature. I thought I was going to be some time. I took my phone. The phone had been off. So I wandered off to the toilet. Sat down, looked at the phone, and that stared back at me. Oh, dear! When I looked at the website, it was something along the lines of that. It had actually happened again. This is about six months on from when the project was finished. The thermistor had broken again, and the heater was heating everything up. There was a programme. There's my network diagram. It doesn't account for me being on a toilet in the highlands of Scotland! The plug socket is 600 miles away. Now, in this instance, I was lucky because we had someone looking after our cat, and I would be able to send them a text message saying can you nip round, just unplug the heater, it would be fine. We didn't lose any fish from that incident. But I did realise I had a problem if that happened again and someone wasn't coming around the house on a regular basis. I got one of these. You've probably seen these all over the place, radio-based plug sockets that switch things and off. This is good because it's cheap, only £12 for a pack of three, and because they make this, which is an add-on for the Raspberry Pi, and they give you the software to send those transmissions from a Raspberry Pi. So what I was now able to do is put that on the Raspberry Pi, and then complete my network diagram. Rather than being able to do this cut the temperature and cool my fish down, I can actually do that. When the temperature goes out of range, the Raspberry Pi itself can switch off the heater, so I've got a nice closed-loop system there. I decided to take it a step further and get into microcontrollers. The Raspberry Pi is a powerful object, doing a simple job, so it didn't require the horsepower, so I didn't need to maintain the operating system, so I looked at microcontrollers. This is based on the ESP8266 Wi-Fi and Arduino-compatible cheap and runs on Python, and easy to code. Decision only about that big. I thought something like that's going to be really expensive, isn't it? A premium piece of technology there. It's £3.50! Cheap as anything. It is absolute bargain. So there is a new wire up off the thermistor using the microcontroller. Only about 20 lines of Python to make the whole thing work. That's been sitting in its little box of since, but I couldn't really put a bread board like that near a fish tank - it's a bit wet. I had drawn everything out in a freeware public programme, an open source programme used for designing circuits. You can iterate it out as if it was physically there, and you can go to another screen and it will make a PCB layout for you which matches the circuit. That is what I came up. I thought I could make my own PCB, I've not done anything like that before. You can design it for me - cool and brilliant - but how do I make it? I looked at the bottom of the screen, it's a "fabricate". I looked at my printer, hopefully. It went to Germany! And in Germany, they made the circuit and then posted it off to me. Two weeks later, my circuit turned up. They had a little socket, so it plugs in the ESP8266, wire it up, bishop is in a box to keep dry, and now the fish are monitored constantly by it. You start with the ideas, keep reiterating, and building them up. I started to get carried away. I started over engineering things. The next one was a doorbell. This was a speaker for a wireless doorbell. The circuitry is locked down and tiny. What you can do is those 8266s is you can read analogues. You look it up to speaker. When the speaker activates, you see a drop in voltage. You know the doorbell is ringing. You can power it, and plug it in USB, and it powers the remote doorbell as well, and now I get a ding-dong which means I can wear my noise-cancelling headphones and not miss the courier - it's brilliant. This is my garage door. I hope you all realise that. So, I am terrible with my garage door. It is electronic one, it goes up and down on its own. My neighbour says you've left your garage door open again! Can I build something that will help me with that? Now, what we used is "read switches". These are incredibly cheap - five for £5. On one side, you've got a magnetically driven read switch which switches on and off. On the other side, which has dropped on the floor, you've got a little magnet, which have sticky pads on the back, one with a magnet on the frame of the door itself, and you put the other one with the wires on the frame outside next to it. Then, when they move away from each other, the state changes, and you can read that in with your microcontroller or your Raspberry Pi. I hooked one up, and hooked it up to the garage door. Now my garage door has an API! [Laughter]. I can talk to it. It actually lives up here. This is next to my solar power inverter which talks Bluetooth for safety reasons. They don't really - it's got 400-odd volts running into it and they don't want you plugging things into it. The Raspberry Pi looks at stats, and it looks after the garage door as well. It send Bluetooth so we can get stats and information from the car parked outside. It's a busy little thing! I realise at this point with the garage door that I was getting into aspect of the internet things that people talk about, and that's big data. I want a big slice! Never mind. Big data, so I've got big data now on the garage door. Let's have a look of it. Here's a typical day: the 21 St September last year, there were five door-opening event, all around 30 to 50 seconds. What I've learned from that is it takes an average of 45 seconds to get a bottle of wine from the fridge. Good to know. But when I compare it with the next week, sorry, the next day, what is happening here? It's about 600-odd seconds it was only for? Why, because I left the bloody garage door open again! Thankfully, it told me, not my neighbour, so I was able to go out and do that. What happened? I did it again later on. Of course, a bit quicker that time. Now, this one's slightly more complicated but it does tell an interesting story. These data points, the axis, by the way, is seven o'clock at the bottom - in the morning - to 7.40 Al. Between these two times, my son leaves for school, and he gets his bike out of the garage, so he opens and closes the garage door. These data points are at what time between 7.00 and 7.40 he did that. What we can see here he is slowly and slowly getting later and later for school. So he can - he's looking at me now. [Laughter]. So you see, big data: very important. The latest project I've done is a rain sensor. These are insanely cheap. About £each. They're very, very simple. Two lines, if it is raining, it sends information. If it is not, it doesn't. You can hook it up to a Raspberry Pi, no components required, and there's plenty of code out there that you can Google to read the things in. What I've done, as you can see here with is use two sensors to get more surface area, used a case to keep them in place. Then a food container for water resistance, and a battery and microcontroller inside there, and it's constantly reading it. It's got a Wi-Fi connection. Why have I built this? If you have had yourself or your wife screech "rain!" When the laundry's out, you know you're going to have very wet laundry. You sit on the laundry and sit on the patio, and leave it there. It will alert us if it rains. What the ...! [Laughter]. Does not understand Do Not Disturb Mode. I'm sorry about this. This is my network diagram now. It's getting out of control, and of course I want to access the data on the cloud, in my home, or on a toilet in the highlands of Scotland! It got a bit of, and I did what every good programming software engineer does and writes their own messaging protocol. I called that Was It? It's at wasit.org, a good way in Python to send messages to each other. It's in an alpha state. It's all on GitHub. We're in the highlands of Scotland. We're going to do something very stupid in EMF and do at that live demo. Here's a lovely day. I'm not looking at my phone because I'm bored of the talk - not true at all. I'm setting it up. Make sure it is nice and loud. Take it out of Do Not Disturb. Here's my phone. Here, is my rain detector, and, oh, dear, our lovely sunny day has turned into a thunderstorm. Now, we're going to use some high-tech special effects to recreate that weather environment. There you go! I don't know if you can see this. What I'm going to do is spray this right next to the electricity. I'm not going to do that. That's really stupid. So it's going to start raining on this device. And nothing happens. It has actually activated and said it's raining, but whether it's got an actual connection. There you go, it is raining. Yes! [Applause]. So there you go. I don't have a pay a damned subscription to anybody. So, if you've been affected by any of the issues raised in this presentation, here's some of the places to check out for inspiration to build your own Internet of Things. There are some URLs as well. Thanks very much for coming along. We are saying yes to questions. If anyone has got any questions, please fire away. Do we have the ball thing? There it is. That gentleman over there? Gentleman? Lady? I can't see. I'm blinded. 
FLOOR:  Hello.
>> I thought it might be you! 
FLOOR:  What a wonderful talk. So much fun! The bit of software where you hit "fabricate" and it magically came from Germany, how much did it cost to print and then ship out?
>> Because it was bespoke, it's the not particularly cheap - about £30. I was taken back how seam the process is. "We're doing a run on this day, you will have it a few days later." I was quite impressed by it. I'm going to say, that gentleman's name is Terence. If you enjoyed this talk, or if you didn't enjoy this talk, you might enjoy his talk called the Connected House of Horrors which is on Sunday. 
FLOOR:  Sunday at 12.40 right here. 
>> He's done something different from me with the Internet of Things. It's a great talk. 
FLOOR:  You wrote your own proto-al. Have you looked at NQTT at all? That operates in a similar manner. 
>> Absolutely. This is not the problem. This is what it solves. Because, there are many different ways of talking to each other, MQTT, which is an efficient day. If you've got big-data things, like in Milton Keynes, they monitor 10,000-odd parking spaces, you want to preserve your bandwidth, NQT will solve that situation. The problem was there was no standard way I could find for a twice never knowing about another device to talk to each other. It's more of a schema than anything else. Any device I build will obey these simple rules for how it delivers the data, and that means anything I build in the future will be able to to talk to it natively. I don't care how it does it, by carrier pigeon, http, whatever it likes to do it. Anyone else? This gentleman here. I love in ball thing! Fantastic! Oh, not bad! Not bad at all. [Applause]. Round of applause for that. 
FLOOR:  Hello. You mentioned they were tropical fish. What happened if the fish tank gets too cold? 
>> They're hardy with the cold. They don't mind it that much. It's not good for them. It's better than being too hot. In fact, there are a couple of fish in there called Danios which did survive the extinction-level event as we call it because they don't mind the temperature dropping, or indeed increasing. They're quite hardy. It depend on the fish, but always better too cold than too hot, but 21 to 26 for the record.  Is that everything? Well, thanks so much for coming along and listen to me ramble on. I hope you have a great EMF. Thank you very much! [Applause]. .